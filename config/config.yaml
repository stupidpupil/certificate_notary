defaults: &defaults
  sni: <%= ENV['NOTARY_SNI'] || true %>
  private_key_encoded: <%= ENV['NOTARY_PRIVATE_KEY'] %>
  timespan_update_limit: <%= ENV['NOTARY_TIMESPAN_UPDATE_LIMIT'] || 60*60*48 %> # Create a new timespan after 2 days gap
  
  scanning:
    cool_off: <%= ENV['NOTARY_SCAN_COOL_OFF'] || 60*45 %> # 45 minutes - don't check a service more often than this

  periodic_scanning:
    interval: <%= ENV['NOTARY_PERIODIC_SCAN_INTERVAL'] || 60*60*12 %> #Scan a service every ~12 hours
    limit: <%= ENV['NOTARY_PERIODIC_SCAN_LIMIT'] || 60*60*24*5 %> #for up to 5 days after the last request
    period: <%= ENV['NOTARY_PERIODIC_SCAN_PERIOD'] || 60*5 %> #Run the check-and-reobs job every 5 minutes

  que_in_web_process: <%= ENV['NOTARY_QUE_IN_WEB_PROCESS'] || true %>

  cleaning:
    clean_after: <%= ENV['NOTARY_CLEANING_CLEAN_AFTER'] || 120 %>
    delete_orphans: <%= ENV['NOTARY_CLEANING_DELETE_ORPHANS'] || true %>
    period: <%= ENV['NOTARY_CLEANING_PERIOD'] || 6*60*60 %>

development:
  <<: *defaults
  db: 'postgres://localhost/certificate_notary_development'

  periodic_scanning:
    interval: 30
    limit: 120
    period: 5

  scanning:
    cool_off: 10

  cleaning:
    period: 20
    clean_after: 120
    delete_orphans: true

testing:
  <<: *defaults
  db: 'postgres://localhost/certificate_notary_testing'
  private_key_encoded: <%=  Base64.strict_encode64(OpenSSL::PKey::RSA.new(1024).to_der) %>

production:
  <<: *defaults
  db: <%= ENV['DATABASE_URL'] || 'postgres://localhost/certificate_notary_production'%>